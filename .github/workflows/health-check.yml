name: Application Health Monitor

on:
    schedule:
        - cron: '0 */6 * * *' # Every 6 hours
    workflow_dispatch:

jobs:
    health-monitor:
        runs-on: ubuntu-latest
        steps:
            - name: Check application health
              id: health-check
              run: |
                  # Get health status
                  STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://your-app.onrender.com/health)
                  echo "status_code=$STATUS_CODE" >> $GITHUB_OUTPUT

                  # Get additional metrics (example)
                  RESPONSE_TIME=$(curl -s -o /dev/null -w "%{time_total}" https://your-app.onrender.com/health)
                  echo "response_time=$RESPONSE_TIME" >> $GITHUB_OUTPUT

                  if [ "$STATUS_CODE" -ne 200 ]; then
                    echo "::error::Health check failed with status $STATUS_CODE"
                    exit 1
                  fi

            - name: Run synthetic tests
              if: success()
              run: |
                  # Example test commands - replace with your actual tests
                  npm run test:e2e
                  npm run test:integration
              id: synthetic-tests

            - name: Compile status report
              run: |
                  echo "REPORT<<EOF" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ Triggered by: ${{ github.event_name }}" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ Health status: âœ… success (${{ steps.health-check.outputs.response_time }}s)" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ E2E Tests: âœ… success" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ Integration Tests: âœ… success" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ Deployment Status: âœ… healthy" >> $GITHUB_OUTPUT
                  echo "ðŸ”¹ Current Version: ${{ needs.get-version.outputs.version }}" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT
              id: compile-report

            - name: Send comprehensive notification
              uses: actions/github-script@v6
              env:
                  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
              with:
                  script: |
                      const report = `${{ steps.compile-report.outputs.REPORT }}`;

                      await fetch(process.env.DISCORD_WEBHOOK, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          username: 'System Status Bot',
                          avatar_url: 'https://cdn-icons-png.flaticon.com/512/1828/1828884.png',
                          embeds: [{
                            title: 'ðŸ“Š System Status Report',
                            color: 5763719,  # Green color
                            description: report,
                            fields: [
                              {
                                name: 'Response Time',
                                value: `${${{ steps.health-check.outputs.response_time }}s`,
                                inline: true
                              },
                              {
                                name: 'Last Checked',
                                value: new Date().toUTCString(),
                                inline: true
                              }
                            ],
                            timestamp: new Date().toISOString()
                          }]
                        })
                      });

    get-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.extract-version.outputs.version }}
        steps:
            - name: Extract current version
              id: extract-version
              run: |
                  # Replace with your actual version extraction logic
                  VERSION=$(curl -s https://your-app.onrender.com/version | jq -r .version)
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
