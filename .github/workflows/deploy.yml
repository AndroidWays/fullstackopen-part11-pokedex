name: CI/CD Deployment Pipeline

on:
    push:
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Install Playwright browsers
              run: npx playwright install --with-deps

            - name: Run linter
              run: npm run lint

            - name: Build project
              run: npm run build

            - name: Run unit tests
              run: npm test

            - name: Run E2E tests
              run: npm run test:e2e

            - name: Upload production build
              uses: actions/upload-artifact@v4
              with:
                  name: production-build
                  path: dist/

    deploy:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Install jq
              run: sudo apt-get install -y jq

            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  name: production-build
                  path: dist

            - name: Verify build files
              run: |
                  echo "Build contents:"
                  ls -la dist/
                  [ -f dist/index.html ] || { echo "index.html missing!"; exit 1; }
                  [ -f dist/bundle.js ] || { echo "bundle.js missing!"; exit 1; }

            - name: Deploy to Render
              run: |
                  echo "Starting Render deployment..."
                  response=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
                    "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
                    -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    -H "Content-Type: application/json")

                  if [ "$response" -eq 201 ]; then
                    echo "✅ Deployment triggered successfully!"
                  else
                    echo "❌ Deployment failed (HTTP $response)"
                    exit 1
                  fi
              env:
                  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
                  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
