name: CI/CD Deployment Pipeline

on:
    pull_request:
        types: [closed]
        branches: [main]

env:
    SKIP_KEYWORD: '#skip'
    DISCORD_AVATAR: 'https://cdn-icons-png.flaticon.com/512/2092/2092701.png'

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Install and test
              run: |
                  npm ci
                  npx playwright install --with-deps
                  npm run lint
                  npm run build
                  npm test
                  npm run test:e2e

            - name: Upload production build
              if: github.event.pull_request.merged && !contains(github.event.pull_request.title, env.SKIP_KEYWORD)
              uses: actions/upload-artifact@v4
              with:
                  name: production-build
                  path: dist/

    deploy:
        if: github.event.pull_request.merged && !contains(github.event.pull_request.title, env.SKIP_KEYWORD)
        needs: test
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - run: sudo apt-get install -y jq
            - uses: actions/download-artifact@v4
              with:
                  name: production-build
                  path: dist

            - name: Verify build files
              run: |
                  [ -f dist/index.html ] || { echo "::error::index.html missing!"; exit 1; }
                  [ -f dist/bundle.js ] || { echo "::error::bundle.js missing!"; exit 1; }

            - name: Deploy to Render
              run: |
                  DEPLOY_RESPONSE=$(curl -s -X POST \
                    "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
                    -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    -H "Content-Type: application/json")

                  DEPLOY_ID=$(echo "$DEPLOY_RESPONSE" | jq -r '.id')
                  [ -n "$DEPLOY_ID" ] || { echo "::error::Deployment failed"; exit 1; }
                  echo "DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV
                  echo "::notice::‚úÖ Deployment triggered! ID: $DEPLOY_ID"
              env:
                  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
                  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

    tag_release:
        if: github.event.pull_request.merged && !contains(github.event.pull_request.title, env.SKIP_KEYWORD)
        needs: [test, deploy]
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.merge_commit_sha }}
                  fetch-depth: '0'
            - name: Bump version
              id: version
              uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEFAULT_BUMP: patch
                  WITH_V: false

    notify:
        needs: [test, deploy, tag_release]
        runs-on: ubuntu-latest
        if: always()
        steps:
            - name: Success notification
              if: success() && github.event.pull_request.merged && !contains(github.event.pull_request.title, env.SKIP_KEYWORD)
              uses: Ilshidur/action-discord@1.3.1
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  title: 'üöÄ Deployment Successful'
                  color: '0x00FF00'
                  username: 'Deployment Bot'
                  avatar: ${{ env.DISCORD_AVATAR }}
                  description: |
                      **New Version:** ${{ steps.version.outputs.new_tag || 'latest' }}
                      **Deploy ID:** ${{ env.DEPLOY_ID }}
                      **Commit:** [${GITHUB_SHA:0:7}]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$GITHUB_SHA)
                      **PR:** #${{ github.event.pull_request.number }}
                      **By:** ${{ github.event.pull_request.user.login }}
                      **View Deployment:** https://dashboard.render.com/web/${{ secrets.RENDER_SERVICE_ID }}/deploys/${{ env.DEPLOY_ID }}

            - name: Failure notification
              if: failure()
              uses: Ilshidur/action-discord@1.3.1
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  title: '‚ùå Pipeline Failed'
                  color: '0xFF0000'
                  username: 'Deployment Bot'
                  avatar: ${{ env.DISCORD_AVATAR }}
                  description: |
                      **Failed Job:** ${{ needs.test.result || needs.deploy.result || needs.tag_release.result }}
                      **Commit:** [${GITHUB_SHA:0:7}]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$GITHUB_SHA)
                      **PR:** #${{ github.event.pull_request.number }}
                      **By:** ${{ github.event.pull_request.user.login }}
                      **Failed Step:** ${{ failure() }}
                      **Logs:** $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
