name: CI/CD Deployment Pipeline

on:
    pull_request:
        types: [closed]
        branches: [main]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
            - run: npm ci
            - run: npx playwright install --with-deps
            - run: npm run lint
            - run: npm run build
            - run: npm test
            - run: npm run test:e2e
            - uses: actions/upload-artifact@v4
              if: github.event.pull_request.merged == true
              with:
                  name: production-build
                  path: dist/

    deploy:
        if: github.event.pull_request.merged == true
        needs: test
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/download-artifact@v4
              with:
                  name: production-build
                  path: dist
            - run: |
                  [ -f dist/index.html ] || exit 1
                  [ -f dist/bundle.js ] || exit 1
            - run: |
                  curl -s -X POST \
                    "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
                    -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    -H "Content-Type: application/json"

    tag_release:
        if: github.event.pull_request.merged == true
        needs: deploy
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.merge_commit_sha }}
                  fetch-depth: 0
            - uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    notifications:
        needs: [test, deploy, tag_release]
        runs-on: ubuntu-latest
        if: always()
        steps:
            - name: Deployment Success
              if: success()
              uses: rjstone/discord-webhook-notify@v1
              with:
                  severity: info
                  details: |
                      üöÄ A new version of Pokedex Deployed
                      Commit: ${{ github.sha }}
                      Author: ${{ github.actor }}
                      Workflow: ${{ github.workflow }}
                  webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

            - name: Deployment Failure
              if: failure()
              uses: rjstone/discord-webhook-notify@v1
              with:
                  severity: error
                  details: |
                      ‚ùå Deployment failed!
                      Commit: ${{ github.sha }}
                      Author: ${{ github.actor }}
                      Workflow: ${{ github.workflow }}
                      Logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                  webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
