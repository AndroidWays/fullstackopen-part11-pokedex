name: Pokedex CI/CD Deployment Pipeline

on:
    pull_request:
        types: [closed]
        branches: [main]
    schedule:
        - cron: '0 12 * * *' # Daily at 12:00 UTC
    workflow_dispatch:

jobs:
    test:
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
            - name: Install and test
              run: |
                  npm ci
                  npx playwright install --with-deps
                  npm run lint
                  npm run build
                  npm test
                  npm run test:e2e
            - name: Upload production build
              if: github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '#skip')
              uses: actions/upload-artifact@v4
              with:
                  name: production-build
                  path: dist/

    deploy:
        if: github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '#skip')
        needs: test
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - run: sudo apt-get install -y jq
            - uses: actions/download-artifact@v4
              with:
                  name: production-build
                  path: dist
            - name: Verify build files
              run: |
                  [ -f dist/index.html ] || { echo "::error::index.html missing!"; exit 1; }
                  [ -f dist/bundle.js ] || { echo "::error::bundle.js missing!"; exit 1; }
            - name: Deploy to Render
              run: |
                  DEPLOY_RESPONSE=$(curl -s -X POST \
                    "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
                    -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
                    -H "Content-Type: application/json")
                  DEPLOY_ID=$(echo "$DEPLOY_RESPONSE" | jq -r '.id')
                  [ -n "$DEPLOY_ID" ] || { echo "::error::Deployment failed"; exit 1; }
                  echo "DEPLOY_ID=$DEPLOY_ID" >> $GITHUB_ENV
              env:
                  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
                  RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

            - name: Check the deployed service URL
              uses: jtalk/url-health-check-action@v4
              with:
                  url: https://fullstackopen-part11-pokedex.onrender.com/
                  follow-redirect: false
                  max-attempts: 3
                  retry-delay: 5s
                  retry-all: false

    tag_release:
        if: github.event.pull_request.merged == true && !contains(github.event.pull_request.title, '#skip')
        needs: [test, deploy]
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.merge_commit_sha }}
                  fetch-depth: '0'
            - name: Bump version
              id: version
              uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  DEFAULT_BUMP: patch
                  WITH_V: false
            - name: Create new tag
              run: |
                  git tag "v${{ steps.version.outputs.new_tag }}"
                  git push origin "v${{ steps.version.outputs.new_tag }}"

    notify:
        needs: [test, deploy, tag_release]
        runs-on: ubuntu-latest
        if: always()
        steps:
            - name: Send Discord notification
              uses: actions/github-script@v6
              with:
                  script: |
                      const webhook = '${{ secrets.DISCORD_WEBHOOK }}'
                      const status = '${{ job.status }}'
                      const color = status === 'success' ? 65280 : 16711680
                      await fetch(webhook, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          username: 'CI/CD Bot',
                          embeds: [{
                            title: status === 'success' ? '✅ Deployment Successful' : '❌ Deployment Failed',
                            color,
                            fields: [
                              { name: 'Repository', value: '${{ github.repository }}', inline: true },
                              { name: 'Status', value: status, inline: true },
                              { name: 'Event', value: '${{ github.event_name }}', inline: true }
                            ],
                            timestamp: new Date().toISOString()
                          }]
                        })
                      })

    health_check:
        runs-on: ubuntu-latest
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        steps:
            - name: Check the deployed service URL
              id: urlcheck
              uses: jtalk/url-health-check-action@v4
              with:
                  url: https://fullstackopen-part11-pokedex.onrender.com/
                  follow-redirect: false
                  max-attempts: 3
                  retry-delay: 5s
                  retry-all: false

            - name: Notify Discord Health Check
              if: always()
              uses: actions/github-script@v6
              with:
                  script: |
                      const webhook = '${{ secrets.DISCORD_WEBHOOK }}'
                      const passed = '${{ steps.urlcheck.outcome }}' === 'success'
                      await fetch(webhook, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          username: 'Health Check Bot',
                          embeds: [{
                            title: passed ? '✅ Health Check Passed' : '❌ Health Check Failed',
                            color: passed ? 65280 : 16711680,
                            fields: [
                              { name: 'URL', value: 'https://fullstackopen-part11-pokedex.onrender.com/' },
                              { name: 'Result', value: passed ? 'OK' : 'DOWN' }
                            ],
                            timestamp: new Date().toISOString()
                          }]
                        })
                      })
